# Get the current date and time
$currentDateTime = Get-Date

# Specify the folder path where you want to search for files
$folderPath = "C:\Users\Dheeraj\Desktop\test1"

# AWS Details (replace with secure methods)
$AWS_ACCESS_KEY = "XXXXXXXXXXXXXXXXXXXXXXXX"
$AWS_SECRET_KEY = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"

$SECURE_KEY = $(ConvertTo-SecureString -AsPlainText -String $AWS_SECRET_KEY -Force)
$creds = $(New-Object System.Management.Automation.PSCredential ($AWS_ACCESS_KEY, $SECURE_KEY))

$from = "test@gmail.com"
$to = "test01@gmail.com"
$cc = "test02@gmail.com"
$subject = "Files present on the server"

# Function to get files older than a specified time period
function Get-OldFiles ($targetHours, $folderPath, $executionTime) {
    $targetDateTime = $executionTime.AddHours(-$targetHours)
    Get-ChildItem -Path $folderPath -File | Where-Object { $_.LastWriteTime -lt $executionTime -and $_.LastWriteTime -gt $targetDateTime }
}

# Function to export data to HTML table
function Export-DataToHTMLTable ($outputData) {
    $groupedData = $outputData | Group-Object DirectoryPath

    $htmlTable = "<table style='border-collapse: collapse; width: 100%;'>
                    <tr style='background-color: #f2f2f2;'>
                        <th style='border: 1px solid #dddddd; text-align: left; padding: 8px;'>DirectoryPath</th>
                        <th style='border: 1px solid #dddddd; text-align: left; padding: 8px;'>FileName</th>
                    </tr>"

    foreach ($group in $groupedData) {
        $directoryPath = $group.Name
        $fileNames = $group.Group.FileName -join ", "
       
        $htmlTable += "<tr>
                        <td style='border: 1px solid #dddddd; text-align: left; padding: 8px;'>$directoryPath</td>
                        <td style='border: 1px solid #dddddd; text-align: left; padding: 8px;'>$fileNames</td>
                      </tr>"
    }

    $htmlTable += "</table>"
    return $htmlTable
}

# Execute the script logic for searching files up to 24 hours old
$outputData = @()

# Get all directories in the specified folder and its subdirectories
$allDirectories = Get-ChildItem -Path $folderPath -Directory -Recurse

foreach ($directory in $allDirectories) {
    $currentFolderPath = $directory.FullName

    # Get files in the current directory that are older than the current time up to 24 hours
    $oldFiles = Get-OldFiles -targetHours 24 -folderPath $currentFolderPath -executionTime $currentDateTime

    # Add directory and file details to output data
    if ($oldFiles.Count -eq 0) {
        $outputData += [PSCustomObject]@{
            DirectoryPath = $currentFolderPath
            FileName = "No file found"
        }
    } else {
        $outputData += $oldFiles | ForEach-Object {
            [PSCustomObject]@{
                DirectoryPath = $currentFolderPath
                FileName = $_.Name
            }
        }
    }
}

# Get files in the root folder that are older than the current time up to 24 hours
$oldFilesRoot = Get-OldFiles -targetHours 24 -folderPath $folderPath -executionTime $currentDateTime

# Add directory and file details to output data for the root folder
if ($oldFilesRoot.Count -eq 0) {
    $outputData += [PSCustomObject]@{
        DirectoryPath = $folderPath
        FileName = "No file found"
    }
} else {
    $outputData += $oldFilesRoot | ForEach-Object {
        [PSCustomObject]@{
            DirectoryPath = $folderPath
            FileName = $_.Name
        }
    }
}

# Generate HTML table
$htmlTable = Export-DataToHTMLTable -outputData $outputData

# Additional line in the body
$body = "The table contains information about files in the specified folder."

# Concatenate the additional line with the HTML table
$body += $htmlTable

# Send email with HTML table in the body
Send-MailMessage -From $from -To $to -Subject $subject -Cc $cc -Body $body -BodyAsHtml -SmtpServer email-smtp.us-east-1.amazonaws.com -Credential $creds -UseSsl -Port 587
